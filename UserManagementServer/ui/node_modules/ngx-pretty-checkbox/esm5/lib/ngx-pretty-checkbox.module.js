/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NgxPrettyCheckboxComponent } from './components/ngx-pretty-checkbox.component';
import { NgxPrettyIconDirective } from './directives/ngx-pretty-icon.directive';
import { NgxPrettySvgDirective } from './directives/ngx-pretty-svg.directive';
import { FormsModule } from '@angular/forms';
import { NgxPrettyImageDirective } from './directives/ngx-pretty-image.directive';
import { NgxPrettyHoverComponent } from './components/ngx-pretty-hover.component';
import { NgxPrettyIndeterminateComponent } from './components/ngx-pretty-Indeterminate.component';
import { NgxPrettyToggleComponent } from './components/ngx-pretty-toggle.component';
import { NgxPrettyHoverWillChangeComponent } from './components/ngx-pretty-hover-will-change.component';
import { NgxPrettyCheckboxWillChangeComponent } from './components/ngx-pretty-checkbox-will-change.component';
import { NgxPrettyIndeterminateWillChangeComponent } from './components/ngx-pretty-Indeterminate-will-change.component';
import { NgxPrettyToggleWillChangeComponent } from './components/ngx-pretty-toggle-will-change.component';
import { NgxPrettyRadioGroupDirective } from './components/ngx-pretty-radio-group.component';
import { NgxPrettyRadioComponent } from './components/ngx-pretty-radio.component';
import { NgxPrettyRadioWillChangeComponent } from './components/ngx-pretty-radio-will-change.component';
/** @type {?} */
var DECLARATIONS = [
    NgxPrettyCheckboxComponent,
    NgxPrettyCheckboxWillChangeComponent,
    NgxPrettyIconDirective,
    NgxPrettySvgDirective,
    NgxPrettyImageDirective,
    NgxPrettyToggleComponent,
    NgxPrettyToggleWillChangeComponent,
    NgxPrettyHoverComponent,
    NgxPrettyHoverWillChangeComponent,
    NgxPrettyIndeterminateComponent,
    NgxPrettyIndeterminateWillChangeComponent,
    NgxPrettyRadioGroupDirective,
    NgxPrettyRadioComponent,
    NgxPrettyRadioWillChangeComponent
];
var NgxPrettyCheckboxModule = /** @class */ (function () {
    function NgxPrettyCheckboxModule() {
    }
    NgxPrettyCheckboxModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FormsModule
                    ],
                    declarations: [DECLARATIONS],
                    exports: [DECLARATIONS]
                },] }
    ];
    return NgxPrettyCheckboxModule;
}());
export { NgxPrettyCheckboxModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXByZXR0eS1jaGVja2JveC5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtcHJldHR5LWNoZWNrYm94LyIsInNvdXJjZXMiOlsibGliL25neC1wcmV0dHktY2hlY2tib3gubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQyxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUN4RixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUNoRixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUM5RSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDbEYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDbEYsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0saURBQWlELENBQUM7QUFDbEcsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFDcEYsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0scURBQXFELENBQUM7QUFDeEcsT0FBTyxFQUFFLG9DQUFvQyxFQUFFLE1BQU0sd0RBQXdELENBQUM7QUFDOUcsT0FBTyxFQUFFLHlDQUF5QyxFQUFFLE1BQU0sNkRBQTZELENBQUM7QUFDeEgsT0FBTyxFQUFFLGtDQUFrQyxFQUFFLE1BQU0sc0RBQXNELENBQUM7QUFDMUcsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFDN0YsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDbEYsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0scURBQXFELENBQUM7O0lBRWxHLFlBQVksR0FBRztJQUNuQiwwQkFBMEI7SUFDMUIsb0NBQW9DO0lBRXBDLHNCQUFzQjtJQUN0QixxQkFBcUI7SUFDckIsdUJBQXVCO0lBRXZCLHdCQUF3QjtJQUN4QixrQ0FBa0M7SUFFbEMsdUJBQXVCO0lBQ3ZCLGlDQUFpQztJQUVqQywrQkFBK0I7SUFDL0IseUNBQXlDO0lBRXpDLDRCQUE0QjtJQUM1Qix1QkFBdUI7SUFDdkIsaUNBQWlDO0NBQ2xDO0FBRUQ7SUFBQTtJQVF1QyxDQUFDOztnQkFSdkMsUUFBUSxTQUFDO29CQUNSLE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLFdBQVc7cUJBQ1o7b0JBQ0QsWUFBWSxFQUFFLENBQUUsWUFBWSxDQUFFO29CQUM5QixPQUFPLEVBQUUsQ0FBRSxZQUFZLENBQUU7aUJBQzFCOztJQUNzQyw4QkFBQztDQUFBLEFBUnhDLElBUXdDO1NBQTNCLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcblxyXG5pbXBvcnQgeyBOZ3hQcmV0dHlDaGVja2JveENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9uZ3gtcHJldHR5LWNoZWNrYm94LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE5neFByZXR0eUljb25EaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvbmd4LXByZXR0eS1pY29uLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IE5neFByZXR0eVN2Z0RpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9uZ3gtcHJldHR5LXN2Zy5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgTmd4UHJldHR5SW1hZ2VEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvbmd4LXByZXR0eS1pbWFnZS5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBOZ3hQcmV0dHlIb3ZlckNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9uZ3gtcHJldHR5LWhvdmVyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE5neFByZXR0eUluZGV0ZXJtaW5hdGVDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvbmd4LXByZXR0eS1JbmRldGVybWluYXRlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE5neFByZXR0eVRvZ2dsZUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9uZ3gtcHJldHR5LXRvZ2dsZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBOZ3hQcmV0dHlIb3ZlcldpbGxDaGFuZ2VDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvbmd4LXByZXR0eS1ob3Zlci13aWxsLWNoYW5nZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBOZ3hQcmV0dHlDaGVja2JveFdpbGxDaGFuZ2VDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvbmd4LXByZXR0eS1jaGVja2JveC13aWxsLWNoYW5nZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBOZ3hQcmV0dHlJbmRldGVybWluYXRlV2lsbENoYW5nZUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9uZ3gtcHJldHR5LUluZGV0ZXJtaW5hdGUtd2lsbC1jaGFuZ2UuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTmd4UHJldHR5VG9nZ2xlV2lsbENoYW5nZUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9uZ3gtcHJldHR5LXRvZ2dsZS13aWxsLWNoYW5nZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBOZ3hQcmV0dHlSYWRpb0dyb3VwRGlyZWN0aXZlIH0gZnJvbSAnLi9jb21wb25lbnRzL25neC1wcmV0dHktcmFkaW8tZ3JvdXAuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTmd4UHJldHR5UmFkaW9Db21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvbmd4LXByZXR0eS1yYWRpby5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBOZ3hQcmV0dHlSYWRpb1dpbGxDaGFuZ2VDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvbmd4LXByZXR0eS1yYWRpby13aWxsLWNoYW5nZS5jb21wb25lbnQnO1xyXG5cclxuY29uc3QgREVDTEFSQVRJT05TID0gW1xyXG4gIE5neFByZXR0eUNoZWNrYm94Q29tcG9uZW50LFxyXG4gIE5neFByZXR0eUNoZWNrYm94V2lsbENoYW5nZUNvbXBvbmVudCxcclxuXHJcbiAgTmd4UHJldHR5SWNvbkRpcmVjdGl2ZSxcclxuICBOZ3hQcmV0dHlTdmdEaXJlY3RpdmUsXHJcbiAgTmd4UHJldHR5SW1hZ2VEaXJlY3RpdmUsXHJcblxyXG4gIE5neFByZXR0eVRvZ2dsZUNvbXBvbmVudCxcclxuICBOZ3hQcmV0dHlUb2dnbGVXaWxsQ2hhbmdlQ29tcG9uZW50LFxyXG5cclxuICBOZ3hQcmV0dHlIb3ZlckNvbXBvbmVudCxcclxuICBOZ3hQcmV0dHlIb3ZlcldpbGxDaGFuZ2VDb21wb25lbnQsXHJcblxyXG4gIE5neFByZXR0eUluZGV0ZXJtaW5hdGVDb21wb25lbnQsXHJcbiAgTmd4UHJldHR5SW5kZXRlcm1pbmF0ZVdpbGxDaGFuZ2VDb21wb25lbnQsXHJcblxyXG4gIE5neFByZXR0eVJhZGlvR3JvdXBEaXJlY3RpdmUsXHJcbiAgTmd4UHJldHR5UmFkaW9Db21wb25lbnQsXHJcbiAgTmd4UHJldHR5UmFkaW9XaWxsQ2hhbmdlQ29tcG9uZW50XHJcbl07XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIEZvcm1zTW9kdWxlXHJcbiAgXSxcclxuICBkZWNsYXJhdGlvbnM6IFsgREVDTEFSQVRJT05TIF0sXHJcbiAgZXhwb3J0czogWyBERUNMQVJBVElPTlMgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmd4UHJldHR5Q2hlY2tib3hNb2R1bGUgeyB9XHJcbiJdfQ==