/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NgxPrettyCheckboxComponent } from './components/ngx-pretty-checkbox.component';
import { NgxPrettyIconDirective } from './directives/ngx-pretty-icon.directive';
import { NgxPrettySvgDirective } from './directives/ngx-pretty-svg.directive';
import { FormsModule } from '@angular/forms';
import { NgxPrettyImageDirective } from './directives/ngx-pretty-image.directive';
import { NgxPrettyHoverComponent } from './components/ngx-pretty-hover.component';
import { NgxPrettyIndeterminateComponent } from './components/ngx-pretty-Indeterminate.component';
import { NgxPrettyToggleComponent } from './components/ngx-pretty-toggle.component';
import { NgxPrettyHoverWillChangeComponent } from './components/ngx-pretty-hover-will-change.component';
import { NgxPrettyCheckboxWillChangeComponent } from './components/ngx-pretty-checkbox-will-change.component';
import { NgxPrettyIndeterminateWillChangeComponent } from './components/ngx-pretty-Indeterminate-will-change.component';
import { NgxPrettyToggleWillChangeComponent } from './components/ngx-pretty-toggle-will-change.component';
import { NgxPrettyRadioGroupDirective } from './components/ngx-pretty-radio-group.component';
import { NgxPrettyRadioComponent } from './components/ngx-pretty-radio.component';
import { NgxPrettyRadioWillChangeComponent } from './components/ngx-pretty-radio-will-change.component';
/** @type {?} */
const DECLARATIONS = [
    NgxPrettyCheckboxComponent,
    NgxPrettyCheckboxWillChangeComponent,
    NgxPrettyIconDirective,
    NgxPrettySvgDirective,
    NgxPrettyImageDirective,
    NgxPrettyToggleComponent,
    NgxPrettyToggleWillChangeComponent,
    NgxPrettyHoverComponent,
    NgxPrettyHoverWillChangeComponent,
    NgxPrettyIndeterminateComponent,
    NgxPrettyIndeterminateWillChangeComponent,
    NgxPrettyRadioGroupDirective,
    NgxPrettyRadioComponent,
    NgxPrettyRadioWillChangeComponent
];
export class NgxPrettyCheckboxModule {
}
NgxPrettyCheckboxModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    FormsModule
                ],
                declarations: [DECLARATIONS],
                exports: [DECLARATIONS]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXByZXR0eS1jaGVja2JveC5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtcHJldHR5LWNoZWNrYm94LyIsInNvdXJjZXMiOlsibGliL25neC1wcmV0dHktY2hlY2tib3gubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQyxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUN4RixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUNoRixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUM5RSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDbEYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDbEYsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0saURBQWlELENBQUM7QUFDbEcsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFDcEYsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0scURBQXFELENBQUM7QUFDeEcsT0FBTyxFQUFFLG9DQUFvQyxFQUFFLE1BQU0sd0RBQXdELENBQUM7QUFDOUcsT0FBTyxFQUFFLHlDQUF5QyxFQUFFLE1BQU0sNkRBQTZELENBQUM7QUFDeEgsT0FBTyxFQUFFLGtDQUFrQyxFQUFFLE1BQU0sc0RBQXNELENBQUM7QUFDMUcsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFDN0YsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDbEYsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0scURBQXFELENBQUM7O01BRWxHLFlBQVksR0FBRztJQUNuQiwwQkFBMEI7SUFDMUIsb0NBQW9DO0lBRXBDLHNCQUFzQjtJQUN0QixxQkFBcUI7SUFDckIsdUJBQXVCO0lBRXZCLHdCQUF3QjtJQUN4QixrQ0FBa0M7SUFFbEMsdUJBQXVCO0lBQ3ZCLGlDQUFpQztJQUVqQywrQkFBK0I7SUFDL0IseUNBQXlDO0lBRXpDLDRCQUE0QjtJQUM1Qix1QkFBdUI7SUFDdkIsaUNBQWlDO0NBQ2xDO0FBVUQsTUFBTSxPQUFPLHVCQUF1Qjs7O1lBUm5DLFFBQVEsU0FBQztnQkFDUixPQUFPLEVBQUU7b0JBQ1AsWUFBWTtvQkFDWixXQUFXO2lCQUNaO2dCQUNELFlBQVksRUFBRSxDQUFFLFlBQVksQ0FBRTtnQkFDOUIsT0FBTyxFQUFFLENBQUUsWUFBWSxDQUFFO2FBQzFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuXHJcbmltcG9ydCB7IE5neFByZXR0eUNoZWNrYm94Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL25neC1wcmV0dHktY2hlY2tib3guY29tcG9uZW50JztcclxuaW1wb3J0IHsgTmd4UHJldHR5SWNvbkRpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9uZ3gtcHJldHR5LWljb24uZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgTmd4UHJldHR5U3ZnRGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL25neC1wcmV0dHktc3ZnLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBOZ3hQcmV0dHlJbWFnZURpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9uZ3gtcHJldHR5LWltYWdlLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IE5neFByZXR0eUhvdmVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL25neC1wcmV0dHktaG92ZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTmd4UHJldHR5SW5kZXRlcm1pbmF0ZUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9uZ3gtcHJldHR5LUluZGV0ZXJtaW5hdGUuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTmd4UHJldHR5VG9nZ2xlQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL25neC1wcmV0dHktdG9nZ2xlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE5neFByZXR0eUhvdmVyV2lsbENoYW5nZUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9uZ3gtcHJldHR5LWhvdmVyLXdpbGwtY2hhbmdlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE5neFByZXR0eUNoZWNrYm94V2lsbENoYW5nZUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9uZ3gtcHJldHR5LWNoZWNrYm94LXdpbGwtY2hhbmdlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE5neFByZXR0eUluZGV0ZXJtaW5hdGVXaWxsQ2hhbmdlQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL25neC1wcmV0dHktSW5kZXRlcm1pbmF0ZS13aWxsLWNoYW5nZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBOZ3hQcmV0dHlUb2dnbGVXaWxsQ2hhbmdlQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL25neC1wcmV0dHktdG9nZ2xlLXdpbGwtY2hhbmdlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE5neFByZXR0eVJhZGlvR3JvdXBEaXJlY3RpdmUgfSBmcm9tICcuL2NvbXBvbmVudHMvbmd4LXByZXR0eS1yYWRpby1ncm91cC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBOZ3hQcmV0dHlSYWRpb0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9uZ3gtcHJldHR5LXJhZGlvLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE5neFByZXR0eVJhZGlvV2lsbENoYW5nZUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9uZ3gtcHJldHR5LXJhZGlvLXdpbGwtY2hhbmdlLmNvbXBvbmVudCc7XHJcblxyXG5jb25zdCBERUNMQVJBVElPTlMgPSBbXHJcbiAgTmd4UHJldHR5Q2hlY2tib3hDb21wb25lbnQsXHJcbiAgTmd4UHJldHR5Q2hlY2tib3hXaWxsQ2hhbmdlQ29tcG9uZW50LFxyXG5cclxuICBOZ3hQcmV0dHlJY29uRGlyZWN0aXZlLFxyXG4gIE5neFByZXR0eVN2Z0RpcmVjdGl2ZSxcclxuICBOZ3hQcmV0dHlJbWFnZURpcmVjdGl2ZSxcclxuXHJcbiAgTmd4UHJldHR5VG9nZ2xlQ29tcG9uZW50LFxyXG4gIE5neFByZXR0eVRvZ2dsZVdpbGxDaGFuZ2VDb21wb25lbnQsXHJcblxyXG4gIE5neFByZXR0eUhvdmVyQ29tcG9uZW50LFxyXG4gIE5neFByZXR0eUhvdmVyV2lsbENoYW5nZUNvbXBvbmVudCxcclxuXHJcbiAgTmd4UHJldHR5SW5kZXRlcm1pbmF0ZUNvbXBvbmVudCxcclxuICBOZ3hQcmV0dHlJbmRldGVybWluYXRlV2lsbENoYW5nZUNvbXBvbmVudCxcclxuXHJcbiAgTmd4UHJldHR5UmFkaW9Hcm91cERpcmVjdGl2ZSxcclxuICBOZ3hQcmV0dHlSYWRpb0NvbXBvbmVudCxcclxuICBOZ3hQcmV0dHlSYWRpb1dpbGxDaGFuZ2VDb21wb25lbnRcclxuXTtcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGVcclxuICBdLFxyXG4gIGRlY2xhcmF0aW9uczogWyBERUNMQVJBVElPTlMgXSxcclxuICBleHBvcnRzOiBbIERFQ0xBUkFUSU9OUyBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ3hQcmV0dHlDaGVja2JveE1vZHVsZSB7IH1cclxuIl19