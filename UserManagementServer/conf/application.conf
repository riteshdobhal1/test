# This is the main configuration file for the application.
# ~~~~~

# aa.disabled=true

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret=";1[WE]JmK;XMCxV=S2P6kYl?A<^YcKYW3aui[SmusaQlkjq97A`M8l_S:iV?OmDh"

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# The application name
# ~~~~~
application.name="UserManagementServer"

# The application version
# ~~~~~
application.version="7.3.5.28"

# authentication and authorization settings
# change it false for production
# ~~~~~ 
aa.disabled=false

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# XDomain Name
xdomain.name="glassbeam.com"
play.http.session.domain=".glassbeam.com"
request.protocol="https"

## SSO Configuration for mps
sso.mps {
  springpath_springpath="podv2"
  aruba_aruba="podv1"
  vce_vce="podv2"
  siemens_siemens="podui",
  canon_canon="canonct"
}

sso.old_domain {
  vce.glassbeam.com="vce:vce"
  springpath.glassbeam.com="springpath:springpath"
  searchdevums.glassbeam.com="canon:canon"
}
sso.ui_domain = "searchdevui.glassbeam.com"
# SSO Pingone Configurations 

pingone.userStage="ad9939be-e51d-40be-a0c7-9c8efede7e8a"
pingone.userEmbeddedStage="08b96be2-8ac0-494d-a733-32321dd43bab"
pingone.user="905d629e-71d9-41f2-93cb-94000325f520"
pingone.userEmbedded="08b96be2-8ac0-494d-a733-32321dd43bab"
pingone.password="Gla55@beam"
pingone.stagedomain="qaui.glassbeam.com"
pingone.apiBaseUrl="https://sso.connect.pingidentity.com/sso/TXS/2.0/1/"
pingone.loginPageUrl="https://sso.arubanetworks.com/idp/startSSO.ping?PartnerSpId=PingConnect&TargetResource=https://pingone.com/1.0/75d9ddc0-5d2a-419f-a736-e481504c3321"
sso.redirect_def_url = "apps/dist/index.html"
sso.redirect_fail_url = "apps/app/error.html"
sso.default_role = "glassbeamusers"
sso.user_details {
email = "pingone.subject"
role = "http://schemas.microsoft.com/ws/2008/06/identity/claims/groups"
display_name = "http://schemas.microsoft.com/identity/claims/displayname"

} 
# SSO Salesforce Configuration

#Pardot Auth Creds
pardot.email="vijay.vasudevan@glassbeam.com"
pardot.password="Glassbeam12#"
pardot.user_key="2d31fb5658f93d513d6ec201962c492a"
clinsight.auth-token="glassbeam"
clinsight.link.timeout=432000 # Expiry time for links in seconds
clinsight.logo = "https://login.glassbeam.com/images/GBlogo.png"
clinsight.default_realm = "demo"
clinsight.default_role = "clinsightdemorole"

#Two Factor Auth
tfa.email.subject = "Glassbeam - one-time security code"
tfa.otp.timeout = 600 # Expiry time for otp in seconds
tfa.otp.trigger_duration = 14 # in days.

twilio {
  account_sid = "AC466a368fee0bb56c602d0a903ecbeb1f"
  auth_token = "1a447960e3d1e59e49cbe6e18764a094"
  from_number = "+19713022044"
}

salesforce.login.url = "https://login.salesforce.com/"

# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

#Request limit for authenticated user 
request.limit=100

# User Session Timeout in seconds
user.session.timeout=1800
# Expiry time for links in seconds
user.link.timeout=432000

user.link.expireDays="5 Days"

# Maximum limit of failed login attempt
user.failed_login_max_limit = 7

# Block User
user.block_user = true

# time period in seconds
user.block_user_time_period = 86400

# Activate after 'user.block_user_time_period' time period
user.activate_blocked_user = true

# Expiry time for trial
trial.expiryDays=30

# Product mps mapping for campaign
product.mps {
  1: "histor/histor/pod",
  2: "hiwi/hiwi/podui",
  3: "himed/himed/pod",
  4: "meddemo/meddemo/meddemo"
}

# generated secret key for captcha verification
recaptcha.secret = "6LdkUZgUAAAAAIhxVDwHFc8cBJaAjbxhllSEacFY"
# google server url to verify captcha
recaptcha.server_url = "https://www.google.com/recaptcha/api/siteverify"
# Enable captcha
recaptcha.enabled = true


        
# Url def for campaign
campaign.url_def = "apps/dist/index.html"

# Data store configuration
# ~~~~~ 
# Settings for DataStax java driver 
dx.cassandraSeeds=["127.0.0.1"]

dx.driverReadTimeOutMs = 50000  
dx.driverConnectTimeOutMs = 30000
dx.readRetries = 10
dx.readDelayBetweenRetriesSecs = 20
dx.readRetriesWithinTimeMin = 1
dx.fetchSize = 500
dx.readConsistencyLevel = "ONE"
dx.driverReconnectMaxDelayMs = 60000
dx.driverReconnectBaseDelayMs = 1000
dx.driverTcpNoDelay = true
dx.driverProtocolVersion = 3

## ConnectionPoolingOptions
dx.coreConnectionsPerHostLocal = 8
dx.coreConnectionsPerHostRemote = 2
dx.maxConnectionsPerHostLocal = 8
dx.maxConnectionsPerHostRemote = 2
dx.maxRequestsPerConnectionLocal = 1
dx.maxRequestsPerConnectionRemote = 1
dx.newConnectionThresholdLocal = 800
dx.newConnectionThresholdRemote = 200


# DB connecion settings

rdb.name="vertica"
rdb.driver="com.vertica.jdbc.Driver"
rdb.host="52.21.42.19"
rdb.port="5433"
rdb.dbname="glassbeam"
rdb.user="gbq"
rdb.pass="Gla55Beam"


# Spark
# ~~~~~
spark.jars=["lib/spark-cassandra-connector-assembly-2.4.2.jar"]
spark-conf = [
               {
                 name = "spark.app.name"
                 value = "ums"
               },
               { 
                 name = "spark.cassandra.connection.host"
                 value = "127.0.0.1"
               },
               { 
                 name = "spark.master"
                 value = "local[*]"
               },
               { 
                 name = "spark.cassandra.input.split.size_in_mb"
                 value = "100"
               },
               { 
                 name = "spark.cassandra.input.fetch.size_in_rows"
                 value = "5000"
               },
               { 
                 name = "spark.executor.memory"
                 value = "4g"
               },
               {
                 name = "spark.executor.cores"
                 value = "4"
               },
               {
                 name = "spark.cores.max"
                 value = "40"
               },
               {
                 name = "spark.cassandra.input.consistency.level"
                 value = "LOCAL_QUORUM"
               },
               {
                 name = "spark.local.dir"
                 value = "/tmp"
               }
        ]
        
hive-metastore {
  keyspace_table_separator = "_"
  do-not-register {
    system_keyspaces = ["system", "system_traces"]
    user_keyspaces = [""]
    tables = ["org_by_type", "extract_freq", "dashboards", "etl_config", "extract_journal", "rdbms_tbl_pk", "date_to_buckets", "rdbms_tbl_idx", "object", "incr_extract", "solr_collection_usage", "gconf", "file_upload_config", "public_views", "view_config", "view_section", "view_trends"]
  }
}
# default admin configuration
# ~~~~~ 
admin.default.create=true
admin.default.email="admin@glassbeam.com"
admin.default.passwd="gla55beam"
admin.default.fname="glassbeam"
admin.default.lname="admin"


##  configuration for auth0 SSO
auth0.clientSecret="OarIFmaDkG-GS7xd9e5AZkUfXvnxKmVrAYUr3I_p9kNJinx9Q0pFHD6PpWC7OKJ_"
auth0.clientId="ykXF05sPsalpIS0afAvo5jc2jWF2bYhm"
auth0.token="https://shs.login-qa.siemens-healthineers.com"
auth0.userinfo="https://shs.login-qa.siemens-healthineers.com"
auth0.callbackURL="https://searchdevums.glassbeam.com/v1/startsso"

# default email configuration
# ~~~~~ 
admin.default.fromemail="donotreply@glassbeam.com"
admin.default.emailhost="email-smtp.us-east-1.amazonaws.com"
admin.default.authemail="AKIAV3BWDIBJFU54CG65"
admin.default.authpasswd="BI33HlqPWn2vOu4Hl3hK0oajxbMZVKyrJkU4X4RrwfSy"
admin.default.emailsubject ="Welcome to Glassbeam!"
admin.default.emailsubjectsso ="Welcome to SmartFleet â€“ Glassbeam applications"
admin.default.pwdresetsubject="Reset Your Password"
admin.default.accountblockedsubject="Account Blocked"
admin.default.emaillink="https://umsqa.glassbeam.com/assets/create-password"
admin.default.email_relative_path_ec="/apps/dist/login/index.html#/change-password"
admin.default.port=587
email.subject.trial.10days="How is Your Glassbeam Free Trial Going?"
email.subject.trial.20days="Your Glassbeam Free Trial Will Expire in 10 Days!"
email.subject.trial.25days="Your Glassbeam Free Trial Will Expire in 5 Days!"
email.subject.trial.30days="Your Glassbeam Free Trial Has Expired!"
email.clinsight.emailsubject="Welcome to Glassbeam Clinsights!"
email.clinsight.emailfooter="Thank You,\nThe Glassbeam Team \nhttp://www.glassbeam.com"
email.clinsight.create_password_link = "https://loginqa.glassbeam.com/login/login.html#change-password"
emailTrialContent {
  7 {
    enabled = true
    subject = "Hope your Glassbeam Clinsights trial is going well!"
    content = ""
  }
  25 {
    enabled = true
    subject = "Your Glassbeam Clinsights Free Trial Will Expire in 5 Days!"
    content = ""
  }
  30 {
    enabled = true
    subject = "Your Glassbeam Clinsights Free Trial Has Expired!"
    content = ""
  }
}

groupUpdateNotification {
    subject = "Glassbeam - System group update"
    header = "Dear"
    body = """The list of systems/devices that you have access to on
Glassbeam has been modified.

This may affect
- Rules that you have subscribed to
- Systems you viewed as part of Clinsights

Once you login to Glassbeam using your credentials, click
on your User Profile -> Device List (which is on the top
right corner of the Glassbeam application) to view the
updated list of systems/devices that you have access to."""
    footer = "Glassbeam administrator"
}

#tablea default username
tableau.generic_username = "generic"
# UMS Domain name
ums.domain.name="https://localhost:9191/v1"

# Redirect url for login page
login.redirect.url="https://www.glassbeam.com"

# Redirect url for error message
redirect.error.page="https://www.glassbeam.com"

# Redirect url for glassbeam home
gb.home.url="https://www.glassbeam.com"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
evolutionplugin=disabled




# Play Configuration for threads
parsers.text.maxLength=10240K
play {
parsers.text.maxLength=10240K
  akka {
    akka.loggers = ["akka.event.slf4j.Slf4jLogger"]
    loglevel = WARNING
    actor {
      default-dispatcher = {
        fork-join-executor {
          parallelism-min = 100
          parallelism-max = 100
        }
      }
    }
  }
}

akka {

  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs to STDOUT)
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"
 
  # Log level for the very basic logger activated during AkkaApplication startup
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "INFO"
  
  log-dead-letters-during-shutdown = off  
  
  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    log-sent-messages = on
    log-received-messages = on
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }
  
  actor {
  
    provider = "remote"
    
    debug {
      unhandled = on
    }
    default-dispatcher {
      throughput = 2
      executor = "thread-pool-executor"
      thread-pool-executor {
        fixed-pool-size = 100
      }
      fork-join-executor {
          parallelism-factor = 1.0
          parallelism-min = 100
          parallelism-max = 100
          task-peeking-mode = LIFO
      }
    }
    deployment { 
      /Supervisor/ReaderRouter {
        router = round-robin-pool
        nr-of-instances = 96
      }      
  
    }
  }  
}
apiPrefix = "api"
