import { ElementRef, EventEmitter, QueryList, AfterViewInit, Renderer2, ChangeDetectorRef } from '@angular/core';
import { NgxPrettyToggleComponent } from './ngx-pretty-toggle.component';
import { PrettyCheckboxAnimation, PrettyCheckBoxChange, PrettyCheckboxColor, PrettyCheckboxShape, PrettyCheckboxStroke } from '../model/interfaces';
import { NgxPrettyToggleWillChangeComponent } from './ngx-pretty-toggle-will-change.component';
export declare class NgxPrettyCheckboxComponent implements AfterViewInit {
    private renderer;
    private el;
    private cd;
    private _stroke;
    private _shape;
    private _animation;
    private _isSwitch;
    private _bigger;
    private _enableFocus;
    private _plain;
    private _outline;
    private _color;
    readonly _prefix = "p-";
    readonly _outlinePrefix = "-o";
    checked: boolean;
    disabled: boolean;
    value: any;
    lock: boolean;
    private _inputElem;
    private _stateElem;
    change: EventEmitter<PrettyCheckBoxChange>;
    private _iconDir;
    private _svgDir;
    private _imgDir;
    private _hoverDir;
    private _hoverWillChangeDir;
    private _indeterminateDir;
    private _indeterminateWillChangeDir;
    _toggleComps: QueryList<NgxPrettyToggleComponent>;
    _toggleWillChangeComps: QueryList<NgxPrettyToggleWillChangeComponent>;
    constructor(renderer: Renderer2, el: ElementRef, cd: ChangeDetectorRef, _stroke: PrettyCheckboxStroke, _shape: PrettyCheckboxShape, _animation: PrettyCheckboxAnimation, _isSwitch: boolean, _bigger: boolean, _enableFocus: boolean, _plain: boolean, _outline: boolean, _color: PrettyCheckboxColor);
    ngAfterViewInit(): void;
    _onChange(event: Event, checked: boolean, value: string): void;
    readonly _isToggle: boolean;
    setIndeterminate(value?: boolean): void;
    forceCheck(check: boolean): void;
}
