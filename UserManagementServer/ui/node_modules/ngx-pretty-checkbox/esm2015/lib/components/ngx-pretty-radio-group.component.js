/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Output, EventEmitter } from '@angular/core';
import { NgxPrettyRadioService } from '../ngx-pretty-checkbox.service';
import { GROUP_NAME } from '../model/params';
/** @type {?} */
let nextId = 1;
export class NgxPrettyRadioGroupDirective {
    constructor() {
        this.name = GROUP_NAME + nextId++;
        this.change = new EventEmitter();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    _emitChange(event) {
        this.change.emit(event);
    }
}
NgxPrettyRadioGroupDirective.decorators = [
    { type: Directive, args: [{
                selector: 'ngx-pretty-radio-group, p-radio-group',
                providers: [NgxPrettyRadioService],
                exportAs: 'ngxRadioGroup'
            },] }
];
/** @nocollapse */
NgxPrettyRadioGroupDirective.ctorParameters = () => [];
NgxPrettyRadioGroupDirective.propDecorators = {
    change: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    NgxPrettyRadioGroupDirective.prototype.name;
    /** @type {?} */
    NgxPrettyRadioGroupDirective.prototype.change;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXByZXR0eS1yYWRpby1ncm91cC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtcHJldHR5LWNoZWNrYm94LyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvbmd4LXByZXR0eS1yYWRpby1ncm91cC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNoRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN2RSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0saUJBQWlCLENBQUM7O0lBR3pDLE1BQU0sR0FBRyxDQUFDO0FBT2QsTUFBTSxPQUFPLDRCQUE0QjtJQU12QztRQUpPLFNBQUksR0FBRyxVQUFVLEdBQUcsTUFBTSxFQUFFLENBQUM7UUFFMUIsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFxQixDQUFDO0lBRTFDLENBQUM7Ozs7O0lBRWhCLFdBQVcsQ0FBQyxLQUF3QjtRQUNsQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMxQixDQUFDOzs7WUFmRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHVDQUF1QztnQkFDakQsU0FBUyxFQUFFLENBQUMscUJBQXFCLENBQUM7Z0JBQ2xDLFFBQVEsRUFBRSxlQUFlO2FBQzFCOzs7OztxQkFLRSxNQUFNOzs7O0lBRlAsNENBQW9DOztJQUVwQyw4Q0FBeUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5neFByZXR0eVJhZGlvU2VydmljZSB9IGZyb20gJy4uL25neC1wcmV0dHktY2hlY2tib3guc2VydmljZSc7XHJcbmltcG9ydCB7IEdST1VQX05BTUUgfSBmcm9tICcuLi9tb2RlbC9wYXJhbXMnO1xyXG5pbXBvcnQgeyBQcmV0dHlSYWRpb0NoYW5nZSB9IGZyb20gJy4uL21vZGVsL2ludGVyZmFjZXMnO1xyXG5cclxubGV0IG5leHRJZCA9IDE7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ25neC1wcmV0dHktcmFkaW8tZ3JvdXAsIHAtcmFkaW8tZ3JvdXAnLFxyXG4gIHByb3ZpZGVyczogW05neFByZXR0eVJhZGlvU2VydmljZV0sXHJcbiAgZXhwb3J0QXM6ICduZ3hSYWRpb0dyb3VwJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgTmd4UHJldHR5UmFkaW9Hcm91cERpcmVjdGl2ZSB7XHJcblxyXG4gIHB1YmxpYyBuYW1lID0gR1JPVVBfTkFNRSArIG5leHRJZCsrO1xyXG5cclxuICBAT3V0cHV0KCkgY2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxQcmV0dHlSYWRpb0NoYW5nZT4oKTtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7fVxyXG5cclxuICBfZW1pdENoYW5nZShldmVudDogUHJldHR5UmFkaW9DaGFuZ2UpIHtcclxuICAgIHRoaXMuY2hhbmdlLmVtaXQoZXZlbnQpO1xyXG4gIH1cclxuXHJcbn1cclxuIl19